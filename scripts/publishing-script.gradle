apply plugin: 'maven-publish'
apply plugin: 'maven'

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier 'sources'
    from sourceSets.main.allJava
}

task javadocJar(type: Jar, dependsOn: javadoc) { // (1)
    classifier = 'javadoc'
    from javadoc.destinationDir
}

task packageJavadoc(type: Jar, dependsOn: 'javadoc') {
    from javadoc.destinationDir
    classifier = 'javadoc'
}

task packageSources(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

artifacts {
    archives(packageJavadoc) {
        type = 'javadoc'
    }

    archives(packageSources) {
        type = 'sources'
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId theGroup
            artifactId theName
            version theVersion

            from components.java
            artifact(javadocJar) { // (3)
                classifier = 'javadoc'
            }
            artifact(sourcesJar) { // (3)
                classifier = 'sources'
            }
        }
    }
}

uploadArchives {
    repositories {
        mavenDeployer {
            def user = System.getProperty("nexus.user", "")
            def password = System.getProperty("nexus.password", "")
            def releasesRepo = System.getProperty("nexus.repo.releases", "")
            def snapshotsRepo = System.getProperty("nexus.repo.snapshots", "")

            repository(url: "$releasesRepo") {
                println "Releases repository is $url. User is '$user'"
                authentication(userName: "$user", password: "$password")
            }
            snapshotRepository(url: "$snapshotsRepo") {
                println "Snapshots repository is $url. User is '$user'"
                authentication(userName: "$user", password: "$password")
            }

            pom.version = theVersion
            pom.artifactId = theName
            pom.groupId = theGroup
        }
    }
}

task rebuildAndPublish(dependsOn: ['clean', 'publishToMavenLocal', 'uploadArchives'])

task rebuildAndPublishSubs {
    dependsOn gradle.includedBuilds*.task(':rebuildAndPublish')
}

task rebuildAndPublishWithSubs(dependsOn: ['rebuildAndPublishSubs', 'rebuildAndPublish'])